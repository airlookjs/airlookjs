ARG PORT=80

FROM node:22-bullseye AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS build
ENV CI=true
WORKDIR /app
COPY ./pnpm-workspace.yaml ./
COPY ./.npmrc ./
COPY ./pnpm-lock.yaml ./
#RUN pnpm install
# --mount=type=cache,id=pnpm,target=/pnpm/store
RUN --mount=type=cache,id=pnpm-store,target=/root/.pnpm-store pnpm fetch --frozen-lockfile --unsafe-perm

COPY ./dist/packages/node-healthcheck ./packages/node-healthcheck
COPY ./dist/packages/shared ./packages/shared
COPY ./dist/packages/loudness ./packages/loudness
COPY package.json ./

RUN --mount=type=cache,id=pnpm-store,target=/root/.pnpm-store pnpm install --filter=loudness --offline --frozen-lockfile --unsafe-perm

#RUN --mount=type=cache,id=pnpm-store,target=/root/.pnpm-store pnpm deploy --filter=loudness --offline --prod /prod/loudness --unsafe-perm

#CMD [ "node", "./src/index.js" ]
FROM base AS production
#COPY --from=build /prod/loudness /prod/loudness
#WORKDIR /prod/loudness
COPY --from=build /app/packages ./app/packages
COPY --from=build /app/node_modules ./app/node_modules

#COPY --from=workspace /app/node_modules ./node_modules
#COPY --from=workspace /app/node_modules/@airlookjs/shared ./node_modules/@airlookjs/shared
#COPY --from=workspace /app/node_modules/.pnpm/@airlookjs/shared* ./node_modules/.pnpm/
#COPY --from=workspace /app/pruned /app/pruned

WORKDIR /app/packages/loudness
CMD [ "node", "--trace-warnings", "./src/index.js" ]

#FROM base AS runtime-deps
#RUN apt-get update && apt-get install -y \
#    libavformat59 \
#    libavcodec59 \
#    libavutil57 \
#    libebur128-1 \
#    libsndfile1


#FROM workspace as pruned
#WORKDIR /app
#RUN pnpm nx run loudness:build - already built
#COPY . dist/packages/loudness
#RUN pnpm --filter loudness --prefer-offline --prod deploy pruned --frozen-lockfile

#CMD [ "node", "./pruned/src/index.js" ]




#
#FROM prod-deps-installed AS dev
#RUN pnpm fetch
#COPY . ./
#RUN pnpm recursive install --offline --frozen-lockfile
#RUN pnpm m run build
#ENTRYPOINT ["/bin/bash", "-c"]
#CMD ["node"]

#FROM dev AS assets
#RUN pnpm recursive exec -- rm -rf ./node_modules

#FROM prod-deps-installed
#COPY --from=assets /opt/app/ .
